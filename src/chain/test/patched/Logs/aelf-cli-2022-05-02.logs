2022-05-03 00:20:26.137 +08:00 [INF] AElf Cli (https://aelf.io)
2022-05-03 00:20:26.159 +08:00 [ERR] The requested service 'AElf.Cli.Commands.AccountsCommand' has not been registered. To avoid this exception, either register a component to provide the service, check for service registration using IsRegistered(), or use the ResolveOptional() method to resolve an optional dependency.
Autofac.Core.Registration.ComponentNotRegisteredException: The requested service 'AElf.Cli.Commands.AccountsCommand' has not been registered. To avoid this exception, either register a component to provide the service, check for service registration using IsRegistered(), or use the ResolveOptional() method to resolve an optional dependency.
   at Autofac.ResolutionExtensions.ResolveService(IComponentContext context, Service service, IEnumerable`1 parameters)
   at Autofac.ResolutionExtensions.Resolve(IComponentContext context, Type serviceType, IEnumerable`1 parameters)
   at Autofac.ResolutionExtensions.Resolve(IComponentContext context, Type serviceType)
   at Autofac.Extensions.DependencyInjection.AutofacServiceProvider.GetRequiredService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at AElf.Cli.Commands.HelpCommand.GetUsageInfo() in C:\P\AELF\aelf-cli\src\AElf.Cli\Commands\HelpCommand.cs:line 74
   at AElf.Cli.Commands.HelpCommand.ExecuteAsync(CommandLineArgs commandLineArgs) in C:\P\AELF\aelf-cli\src\AElf.Cli\Commands\HelpCommand.cs:line 34
   at AElf.Cli.AElfCliService.RunAsync(String[] args) in C:\P\AELF\aelf-cli\src\AElf.Cli\AElfCliService.cs:line 52
2022-05-03 00:21:24.802 +08:00 [INF] AElf Cli (https://aelf.io)
2022-05-03 00:21:26.504 +08:00 [INF] Send transaction: 654392295e09b5c35ac2d09dfeb7205ef8f55b5f3ba491e28fcff17c12eb20c8 successfully.
2022-05-03 00:21:26.507 +08:00 [INF] Checking transaction result...
2022-05-03 00:21:28.981 +08:00 [INF] Transaction: 654392295e09b5c35ac2d09dfeb7205ef8f55b5f3ba491e28fcff17c12eb20c8 executed successfully.
2022-05-03 00:21:28.989 +08:00 [INF] Smart contract deployed successfully! Contract address is: 2WHXRoLRjbUTDQsuqR5CntygVfnDb125qdJkudev4kVNbLhTdG
2022-05-03 00:24:08.195 +08:00 [INF] AElf Cli (https://aelf.io)
2022-05-03 00:24:09.934 +08:00 [INF] Send transaction: 947ab9711224756802492f25d5f32e2a3770b87fabba064848fcca378e29b7a3 successfully.
2022-05-03 00:24:09.937 +08:00 [INF] Checking transaction result...
2022-05-03 00:24:15.304 +08:00 [INF] Transaction: 947ab9711224756802492f25d5f32e2a3770b87fabba064848fcca378e29b7a3 executed successfully.
2022-05-03 00:40:15.139 +08:00 [INF] AElf Cli (https://aelf.io)
2022-05-03 00:40:15.684 +08:00 [INF] Send transaction: 7c76fa7835254cc6343a779525bed5fd32d4a4b75c5e1b0f3a4b2f3764e7b849 successfully.
2022-05-03 00:40:15.687 +08:00 [INF] Checking transaction result...
2022-05-03 00:40:15.750 +08:00 [WRN] Transaction: 7c76fa7835254cc6343a779525bed5fd32d4a4b75c5e1b0f3a4b2f3764e7b849 failed. Error: AElf.Sdk.CSharp.AssertionException: Can take ELF again after "2022-05-02T19:24:16.157858200Z"
2022-05-03 00:40:21.031 +08:00 [INF] AElf Cli (https://aelf.io)
2022-05-03 00:40:22.674 +08:00 [INF] Send transaction: 0dd51c7ce9a7f491e7e92cc91c6fb00adb82730cc9d23675a9906a5d09c7e2d7 successfully.
2022-05-03 00:40:22.677 +08:00 [INF] Checking transaction result...
2022-05-03 00:40:24.066 +08:00 [INF] Transaction: 0dd51c7ce9a7f491e7e92cc91c6fb00adb82730cc9d23675a9906a5d09c7e2d7 executed successfully.
2022-05-03 00:40:24.074 +08:00 [INF] Smart contract deployed successfully! Contract address is: 2WHXRoLRjbUTDQsuqR5CntygVfnDb125qdJkudev4kVNbLhTdG
2022-05-03 01:08:11.445 +08:00 [INF] AElf Cli (https://aelf.io)
2022-05-03 01:08:12.343 +08:00 [INF] Send transaction: 0fa63cb2617606f074bdc390d0e1780af9baaf37c841cc8826b37cd766d783c1 successfully.
2022-05-03 01:08:12.346 +08:00 [INF] Checking transaction result...
2022-05-03 01:08:14.321 +08:00 [INF] AElf Cli (https://aelf.io)
2022-05-03 01:08:14.913 +08:00 [INF] Send transaction: aa54a98c16df8e52660c83e5dd0261669783653e95caddf3b597edb87366e5f0 successfully.
2022-05-03 01:08:14.916 +08:00 [INF] Checking transaction result...
2022-05-03 01:08:15.058 +08:00 [WRN] Transaction: aa54a98c16df8e52660c83e5dd0261669783653e95caddf3b597edb87366e5f0 failed. Error: AElf.Sdk.CSharp.AssertionException: Can take ELF again after "2022-05-02T19:24:16.157858200Z"
2022-05-03 01:17:37.065 +08:00 [INF] AElf Cli (https://aelf.io)
2022-05-03 01:17:37.088 +08:00 [ERR] The requested service 'AElf.Cli.Commands.AccountsCommand' has not been registered. To avoid this exception, either register a component to provide the service, check for service registration using IsRegistered(), or use the ResolveOptional() method to resolve an optional dependency.
Autofac.Core.Registration.ComponentNotRegisteredException: The requested service 'AElf.Cli.Commands.AccountsCommand' has not been registered. To avoid this exception, either register a component to provide the service, check for service registration using IsRegistered(), or use the ResolveOptional() method to resolve an optional dependency.
   at Autofac.ResolutionExtensions.ResolveService(IComponentContext context, Service service, IEnumerable`1 parameters)
   at Autofac.ResolutionExtensions.Resolve(IComponentContext context, Type serviceType, IEnumerable`1 parameters)
   at Autofac.ResolutionExtensions.Resolve(IComponentContext context, Type serviceType)
   at Autofac.Extensions.DependencyInjection.AutofacServiceProvider.GetRequiredService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at AElf.Cli.Commands.HelpCommand.GetUsageInfo() in C:\P\AELF\aelf-cli\src\AElf.Cli\Commands\HelpCommand.cs:line 74
   at AElf.Cli.Commands.HelpCommand.ExecuteAsync(CommandLineArgs commandLineArgs) in C:\P\AELF\aelf-cli\src\AElf.Cli\Commands\HelpCommand.cs:line 34
   at AElf.Cli.AElfCliService.RunAsync(String[] args) in C:\P\AELF\aelf-cli\src\AElf.Cli\AElfCliService.cs:line 52
2022-05-03 01:17:45.407 +08:00 [INF] AElf Cli (https://aelf.io)
2022-05-03 01:17:46.064 +08:00 [INF] Send transaction: c0d502312eed43bafacfe0325ba7bfb1dc7b8937d2353fb1e30593ec2147270e successfully.
2022-05-03 01:17:46.067 +08:00 [INF] Checking transaction result...
2022-05-03 01:17:47.204 +08:00 [WRN] Transaction: c0d502312eed43bafacfe0325ba7bfb1dc7b8937d2353fb1e30593ec2147270e failed. Error: AElf.Sdk.CSharp.AssertionException: Can take ELF again after "2022-05-02T19:24:16.157858200Z"
2022-05-03 01:18:03.457 +08:00 [INF] AElf Cli (https://aelf.io)
2022-05-03 01:18:03.478 +08:00 [ERR] The requested service 'AElf.Cli.Commands.AccountsCommand' has not been registered. To avoid this exception, either register a component to provide the service, check for service registration using IsRegistered(), or use the ResolveOptional() method to resolve an optional dependency.
Autofac.Core.Registration.ComponentNotRegisteredException: The requested service 'AElf.Cli.Commands.AccountsCommand' has not been registered. To avoid this exception, either register a component to provide the service, check for service registration using IsRegistered(), or use the ResolveOptional() method to resolve an optional dependency.
   at Autofac.ResolutionExtensions.ResolveService(IComponentContext context, Service service, IEnumerable`1 parameters)
   at Autofac.ResolutionExtensions.Resolve(IComponentContext context, Type serviceType, IEnumerable`1 parameters)
   at Autofac.ResolutionExtensions.Resolve(IComponentContext context, Type serviceType)
   at Autofac.Extensions.DependencyInjection.AutofacServiceProvider.GetRequiredService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at AElf.Cli.AElfCliService.RunAsync(String[] args) in C:\P\AELF\aelf-cli\src\AElf.Cli\AElfCliService.cs:line 51
2022-05-03 01:18:12.835 +08:00 [INF] AElf Cli (https://aelf.io)
2022-05-03 01:18:12.854 +08:00 [ERR] The requested service 'AElf.Cli.Commands.CreateCommand' has not been registered. To avoid this exception, either register a component to provide the service, check for service registration using IsRegistered(), or use the ResolveOptional() method to resolve an optional dependency.
Autofac.Core.Registration.ComponentNotRegisteredException: The requested service 'AElf.Cli.Commands.CreateCommand' has not been registered. To avoid this exception, either register a component to provide the service, check for service registration using IsRegistered(), or use the ResolveOptional() method to resolve an optional dependency.
   at Autofac.ResolutionExtensions.ResolveService(IComponentContext context, Service service, IEnumerable`1 parameters)
   at Autofac.ResolutionExtensions.Resolve(IComponentContext context, Type serviceType, IEnumerable`1 parameters)
   at Autofac.ResolutionExtensions.Resolve(IComponentContext context, Type serviceType)
   at Autofac.Extensions.DependencyInjection.AutofacServiceProvider.GetRequiredService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at AElf.Cli.AElfCliService.RunAsync(String[] args) in C:\P\AELF\aelf-cli\src\AElf.Cli\AElfCliService.cs:line 51
