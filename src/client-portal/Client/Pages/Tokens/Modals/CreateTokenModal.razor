<MudContainer Class="pa-0 ma-0" MaxWidth="MaxWidth.False" style="max-height: 80vh; overflow-y: scroll">
    <EditForm Model="@Model" OnValidSubmit="SubmitAsync">
        <FluentValidationValidator @ref="_fluentValidationValidator" />
        <MudDialog DisableSidePadding="true" ClassActions="px-2 py-4">
            <DialogContent>
                <MudContainer MaxWidth="MaxWidth.False">
                    <MudGrid Class="pt-0 pb-4" Spacing="2">
                        <MudItem xs="12">
                            <MudText Typo="Typo.body1" Class="text-white">
                                LatchBox will create a token on <b>@MainChainId</b> chain. After the token has created, if you want to create the same token on <b>@SideChainId</b> chain, please select the add button and 'Add Existing Token' to add your token on <b>@SideChainId</b> chain.
                            </MudText>
                        </MudItem>

                        <MudItem xs="12">
                            <MudTextField Label="Symbol" Variant="Variant.Outlined" Disabled="IsProcessing"
                                          @bind-Value="Model.Symbol" For="@(() => Model.Symbol)" />
                        </MudItem>

                        <MudItem xs="12">
                            <MudTextField Label="Token Name" Variant="Variant.Outlined" Disabled="IsProcessing"
                                          @bind-Value="Model.TokenName" For="@(() => Model.TokenName)" />
                        </MudItem>

                        <MudItem xs="12">
                            <MudTextField Label="Decimals" Variant="Variant.Outlined" Disabled="IsProcessing"
                                          @bind-Value="Model.Decimals" For="@(() => Model.Decimals)" />
                        </MudItem>

                        <MudItem xs="12">
                            <MudTextField Label="Total Token Supply" Variant="Variant.Outlined" Disabled="IsProcessing"
                                          @bind-Value="Model.TotalSupply" For="@(() => Model.TotalSupply)" />
                        </MudItem>

@*
                        <MudItem xs="12">
                            <MudTextField Label="Initial Token Supply" Variant="Variant.Outlined" Disabled="IsProcessing"
                                          @bind-Value="Model.InitialSupply" For="@(() => Model.InitialSupply)" />
                        </MudItem>
*@

                        <MudItem xs="12">
                            <MudSelect T="bool" Disabled="IsProcessing" Label="Burnable" Variant="Variant.Outlined" MultiSelection="false" @bind-Value="Model.IsBurnable">
                                <MudSelectItem Value="true">Yes</MudSelectItem>
                                <MudSelectItem Value="false">No</MudSelectItem>
                            </MudSelect>
                        </MudItem>

                        <MudItem xs="12">
                            <MudText Typo="Typo.caption" Class="text-white" Color="Color.Info">
                                Before creating a token, you must ensure that you have enough funds on <b>@MainChainId</b> chain. This process may take a while.
                            </MudText>
                        </MudItem>
                    </MudGrid>
                </MudContainer>
            </DialogContent>
            <DialogActions>
                <MudButton DisableElevation Variant="Variant.Text" Disabled="IsProcessing" OnClick="Cancel">CANCEL</MudButton>
                <MudButton DisableElevation Variant="Variant.Filled" Disabled="IsProcessing" ButtonType="ButtonType.Submit" Color="Color.Secondary">
                    @if (IsProcessing)
                    {
                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                    }
                    else
                    {
                        <span>CREATE</span>
                    }
                </MudButton>
            </DialogActions>
        </MudDialog>
    </EditForm>
</MudContainer>

