<MudContainer MaxWidth="MaxWidth.False" Style="max-height: 80vh; overflow-y: scroll">
    <MudDialog DisableSidePadding="true" ClassActions="px-2 py-4" ClassContent="pt-0">
        <TitleContent>
            <div>
                <MudText Typo="Typo.h6">Vesting #@VestingId</MudText>
                @if (IsLoaded)
                {
                    <MudChip Size="Size.Small" Class="ma-0 mt-1" Color="Color.Primary" Variant="Variant.Text" OnClick="OnCopyShareLinkAsync">@ShareLink</MudChip>
                }
            </div>
        </TitleContent>
        <DialogContent>
            <MudGrid Class="pt-0 pb-4" Spacing="1">
                @if (!IsLoaded)
                {
                    <MudItem xs="12">
                        <MudSkeleton Height="100px" Width="100%" Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" />
                    </MudItem>
                }
                else
                {
                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Token Name</b></MudText>
                            <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.TokenInfo.TokenName</MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Symbol</b></MudText>
                            <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.TokenInfo.Symbol</MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Initiator</b></MudText>
                            <MudHidden Breakpoint="Breakpoint.Xs" Invert="true">
                                <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.InitiatorAddressDisplay.ToMask(6)</MudText>

                            </MudHidden>
                            <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true">
                                <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.InitiatorAddressDisplay.ToMask(10)</MudText>

                            </MudHidden>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Status</b></MudText>
                            <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.StatusDisplay</MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Date Created</b></MudText>
                            <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.DateCreationDisplay</MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Revocable</b></MudText>
                            <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.RevocableDisplay</MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Total Amount</b></MudText>
                            <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.TotalAmountDisplay</MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Periods</b></MudText>

                            <MudTimeline TimelineOrientation="TimelineOrientation.Vertical" TimelinePosition="TimelinePosition.Left">
                                @foreach (var periodOutput in Model.Periods)
                                {
                                    <MudTimelineItem Color="@(periodOutput.Period.UnlockTime.ToDateTime() < DateTime.UtcNow ? Color.Primary : Color.Default)">
                                        <ItemContent>
                                            <MudText Color="Color.Primary">
                                                <span class="cursor-pointer" @onclick="(() => InvokeVestingPeriodPreviewerModal(periodOutput))">@periodOutput.Period.Name</span>
                                            </MudText>
                                            <MudText Typo="Typo.body2" Color="Color.Secondary">@periodOutput.Receivers.Count() Receivers • @periodOutput.Period.TotalAmount.ToAmountDisplay(Model.TokenInfo.Decimals) @Model.TokenInfo.Symbol</MudText>
                                            <MudText Typo="Typo.caption" Class="mud-text-secondary">@periodOutput.Period.UnlockTime.ToDateTime().ToString(ClientConstants.LongDateTimeFormat)</MudText>
                                        </ItemContent>
                                    </MudTimelineItem>
                                }
                            </MudTimeline>
                        </div>
                    </MudItem>
                }
            </MudGrid>
        </DialogContent>
    </MudDialog>
</MudContainer>
