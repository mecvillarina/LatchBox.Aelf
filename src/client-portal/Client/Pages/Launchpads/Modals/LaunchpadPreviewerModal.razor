<MudContainer MaxWidth="MaxWidth.False" Style="max-height: 80vh; overflow-y: scroll">
    <MudDialog DisableSidePadding="true" ClassActions="px-2 py-4" ClassContent="pt-0">
        <DialogContent>
            <MudGrid Class="pt-0 pb-4" Spacing="1">
                @if (!IsLoaded)
                {
                    <MudItem xs="12">
                        <MudSkeleton Height="100px" Width="100%" Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" />
                    </MudItem>
                }
                else
                {
                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Sale Id</b></MudText>
                            <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.Launchpad.Id</MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Token</b></MudText>
                            <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.TokenName (@Model.TokenSymbol)</MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Cap</b></MudText>
                            <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.Launchpad.SoftCapNativeTokenAmount.ToAmountDisplay(NativeTokenInfo.Decimals) @NativeTokenInfo.Symbol - @Model.Launchpad.HardCapNativeTokenAmount.ToAmountDisplay(NativeTokenInfo.Decimals) @NativeTokenInfo.Symbol</MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Sale Conversion</b></MudText>
                            <MudText Typo="Typo.body1" Class="text-white mb-2">1 @NativeTokenInfo.Symbol = @Model.Launchpad.TokenAmountPerNativeToken.ToAmountDisplay(Model.TokenDecimals) @Model.Launchpad.TokenSymbol</MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Sale Starts</b></MudText>
                            <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.Launchpad.SaleStartDate.ToDateTimeOffset().ToString(ClientConstants.LongDateTimeFormat)</MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Sale Ends</b></MudText>
                            <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.Launchpad.SaleEndDate.ToDateTimeOffset().ToString(ClientConstants.LongDateTimeFormat)</MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Raised Amount</b></MudText>
                            <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.RaisedAmount.ToAmount(NativeTokenInfo.Decimals) @NativeTokenInfo.Symbol / @Model.Launchpad.HardCapNativeTokenAmount.ToAmount(NativeTokenInfo.Decimals) @NativeTokenInfo.Symbol (@(Model.RaisedAmount.ToAmount(NativeTokenInfo.Decimals) / Model.Launchpad.HardCapNativeTokenAmount.ToAmount(NativeTokenInfo.Decimals) * 100) %)</MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Lock Duration after Sale</b></MudText>
                            <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.Launchpad.LockUntilDurationInMinutes minutes</MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Status</b></MudText>
                            <MudText Typo="Typo.body1" Class="text-white mb-2">@Model.Status</MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="6">
                        @if (Model.CanBuy)
                        {
                            <MudButton OnClick="InvokeInvestOnLaunchpadModalAsync" Color="Color.Primary" Variant="Variant.Filled">Invest</MudButton>
                        }

                        @if (Model.Launchpad.IsSuccess)
                        {
                            <MudButton OnClick="InvokeLockPreviewerModal" Color="Color.Primary" Variant="Variant.Filled">View Token Vestings</MudButton>
                        }

                        <MudButton Class="ml-2"Color="Color.Secondary" OnClick="OnCopyShareLinkAsync" Variant="Variant.Filled">Share</MudButton>
                    </MudItem>

                    <MudItem xs="12">
                        <div>
                            <MudText Typo="Typo.caption" Class="text-white mb-2"><b>Investments</b></MudText>

                            @if (!IsInvestmentsLoaded)
                            {
                                <MudSkeleton Class="mt-2" Height="100px" Width="100%" Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" />
                            }
                            else
                            {
                                <MudTable Items="Investments" Class="mx-0 grey darken-4" Context="investmentContext" Elevation="10" Breakpoint="Breakpoint.Sm">
                                    <HeaderContent>
                                        <MudTh>Address</MudTh>
                                        <MudTh>@($"Amount ({NativeTokenInfo.Symbol})")</MudTh>
                                    <MudTh>@($"Token Equivalent ({Model.TokenSymbol})")</MudTh>
                                    <MudTh>Status</MudTh>
                                </HeaderContent>
                                <RowTemplate>
                                    <MudTd DataLabel="Address">
                                        @investmentContext.Investor.ToStringAddress().ToMask(6)
                                    </MudTd>
                                    <MudTd DataLabel="@($"Amount ({NativeTokenInfo.Symbol})")">
                                        @investmentContext.TokenAmount.ToAmountDisplay(NativeTokenInfo.Decimals)
                                    </MudTd>
                                    <MudTd DataLabel="@($"Token Equivalent ({Model.TokenSymbol})")">
                                        @(investmentContext.TokenAmount.ToAmount(NativeTokenInfo.Decimals) * Model.Launchpad.TokenAmountPerNativeToken.ToAmount(Model.TokenDecimals))
                                </MudTd>
                                <MudTd DataLabel="Status">
                                    @if (investmentContext.DateRefunded != null)
                                            {
                                        <MudChip Color="Color.Info" Size="Size.Small">Refunded</MudChip>
                                            }
                                            else
                                            {
                                        <MudChip Color="Color.Primary" Size="Size.Small">Succeeded</MudChip>
                                            }
                                </MudTd>
                            </RowTemplate>
                        </MudTable>
                            }

                        </div>
                    </MudItem>


                }
            </MudGrid>
        </DialogContent>
    </MudDialog>
</MudContainer>
