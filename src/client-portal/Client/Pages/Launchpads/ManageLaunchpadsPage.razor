@page "/launchpads/manage"

@attribute [Authorize]

<MudContainer MaxWidth="MaxWidth.False">
     <MudText Class="mb-0 text-lightgray" Typo="Typo.body1" GutterBottom="false">Launchpads</MudText>

     <div class="d-flex mt-0">
        <MudHidden Breakpoint="Breakpoint.SmAndUp">
            <MudText Class="mr-2 align-self-center" Typo="Typo.h5" Color="Color.Primary" GutterBottom="false">My launchpads</MudText>
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs">
            <MudText Class="mr-4 align-self-center" Typo="Typo.h4" Color="Color.Primary" GutterBottom="false">My launchpads</MudText>
        </MudHidden>

        @if (IsLoaded)
        {
            <MudIconButton Class="align-self-center" Icon="@Icons.Material.Filled.Add" Color="Color.Secondary" Variant="Variant.Filled" Size="Size.Small" OnClick="InvokeAddLaunchpadModalAsync" />
            <MudIconButton Class="align-self-center mx-1" Icon="@Icons.Material.Filled.Refresh" Color="Color.Secondary" Variant="Variant.Filled" Size="Size.Small" OnClick="FetchDataAsync" />
        }
    </div>

      <div class="my-2">
        <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true">
            <MudChip Class="ma-0 cursor-pointer" Color="Color.Primary" Variant="Variant.Text" Size="Size.Small" Href="@ContractLink" Target="_blank">
                @ManagerToolkit.AelfSettings.MultiCrowdSaleContractAddress
            </MudChip>
        </MudHidden>
    </div>
</MudContainer>

<MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
    @if (!IsLoaded)
    {
        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Height="56px" Width="100%" />
        <MudSkeleton Class="mt-2" SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Height="280px" Width="100%" />
    }
    else
    {
        <MudPaper Square="true" Elevation="10">
            <MudTable Items="@LaunchpadList" Class="mx-0 grey darken-4" FixedHeader="true" Breakpoint="Breakpoint.Sm">
                <HeaderContent>
                    <MudTh>Id</MudTh>
                    <MudTh>Name</MudTh>
                    <MudTh>Token</MudTh>
                    <MudTh>Soft Cap/Hard Cap</MudTh>
                    <MudTh>Sale Conversion</MudTh>
                    <MudTh>Raised Amount</MudTh>
                    <MudTh>Sale Duration</MudTh>
                    <MudTh>Status</MudTh>
                    <MudTh>Action</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Id">
                        <MudText Typo="Typo.body1" Color="Color.Primary" Class="cursor-pointer" @onclick="(() => OnViewLaunchpad(context))">
                            <b>@context.Launchpad.Id</b>
                        </MudText>
                    </MudTd>
                    <MudTd DataLabel="Name">
                        <span>@context.Launchpad.Name</span>
                    </MudTd>
                    <MudTd DataLabel="Token">
                        <span>@context.Launchpad.TokenSymbol</span>
                    </MudTd>
                    <MudTd DataLabel="Cap">
                        <span>@context.Launchpad.SoftCapNativeTokenAmount.ToAmountDisplay(NativeTokenInfo.Decimals) @NativeTokenInfo.Symbol - @context.Launchpad.HardCapNativeTokenAmount.ToAmountDisplay(NativeTokenInfo.Decimals) @NativeTokenInfo.Symbol</span>
                    </MudTd>
                    <MudTd DataLabel="Sale Conversion">
                        <span>1 @NativeTokenInfo.Symbol = @context.Launchpad.TokenAmountPerNativeToken.ToAmountDisplay(context.TokenDecimals) @context.Launchpad.TokenSymbol </span>
                    </MudTd>
                    <MudTd DataLabel="Raised Amount">
                        <span>@context.RaisedAmount.ToAmount(NativeTokenInfo.Decimals) @NativeTokenInfo.Symbol / @context.Launchpad.HardCapNativeTokenAmount.ToAmount(NativeTokenInfo.Decimals) @NativeTokenInfo.Symbol (@(context.RaisedAmount.ToAmount(NativeTokenInfo.Decimals) / context.Launchpad.HardCapNativeTokenAmount.ToAmount(NativeTokenInfo.Decimals) * 100) %)</span>
                    </MudTd>
                    <MudTd DataLabel="Sale Duration">
                        <div>
                            <span>@context.Launchpad.SaleStartDate.ToDateTimeOffset().ToString(ClientConstants.LongDateTimeFormat)</span><br/>
                            <span>@context.Launchpad.SaleEndDate.ToDateTimeOffset().ToString(ClientConstants.LongDateTimeFormat)</span>
                        </div>
                    </MudTd>
                    <MudTd DataLabel="Status">
                        <MudChip Color="@context.StatusColor" Size="Size.Small">
                            <b>@context.Status</b>
                        </MudChip>
                    </MudTd>
                    <MudTd DataLabel="Actions">
                        <MudMenu Variant="Variant.Filled" Color="Color.Primary" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight" DisableElevation="true" Icon="@Icons.Filled.MoreVert" IconColor="Color.Secondary" Direction="Direction.Left" OffsetX="true">
                            <MudMenuItem Disabled="!context.CanCancel" OnClick="(() => InvokeCancelLaunchpadConfirmationAsync(context))">Cancel</MudMenuItem>
                            <MudMenuItem Disabled="!context.CanComplete" OnClick="(() => InvokeCompleteLaunchpadConfirmationAsync(context))">Complete</MudMenuItem>
                            <MudMenuItem Disabled="!context.CanRefund" OnClick="(() => InvokeCompleteLaunchpadConfirmationAsync(context))">Refund</MudMenuItem>
                        </MudMenu>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        </MudPaper>

    }
</MudContainer>
