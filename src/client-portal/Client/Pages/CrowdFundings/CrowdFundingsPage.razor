@page "/launchpads"

@attribute [Authorize]

<MudContainer MaxWidth="MaxWidth.False">
    <div class="d-flex">
        <MudHidden Breakpoint="Breakpoint.SmAndUp">
            <MudText Class="mr-2 align-self-center" Typo="Typo.h5" Color="Color.Primary" GutterBottom="false">All launchpads</MudText>
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs">
            <MudText Class="mr-4 align-self-center" Typo="Typo.h4" Color="Color.Primary" GutterBottom="false">All launchpads</MudText>
        </MudHidden>

        @if (IsLoaded)
        {
            <MudIconButton Class="align-self-center mx-1" Icon="@Icons.Material.Filled.Refresh" Color="Color.Secondary" Variant="Variant.Filled" Size="Size.Small" OnClick="FetchDataAsync" />
        }
    </div>
</MudContainer>

<MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
    <MudGrid Spacing="4">
        <MudItem xs="12">
            <MudSelect T="int" Label="Status" Variant="Variant.Outlined" MultiSelection="false" ValueChanged="OnStatusChanged">
                <MudSelectItem Value="0">All</MudSelectItem>
                <MudSelectItem Value="1">Upcoming</MudSelectItem>
                <MudSelectItem Value="2">Ongoing</MudSelectItem>
            </MudSelect>
        </MudItem>
    </MudGrid>
</MudContainer>

<MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
    @if (!IsLoaded)
    {
        @*<MudSkeleton SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Height="56px" Width="100%" />*@
        <MudSkeleton Class="mt-2" SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Height="280px" Width="100%" />
    }
    else
    {

        <MudGrid Spacing="4" Class="mt-4">
            @foreach (var output in CrowdSaleList)
            {
                <MudItem xs="12" md="6" xl="3">
                    <MudCard Elevation="10" Class="grey darken-4">
                        <MudCardContent>
                            <div>
                                <div class="mb-2 d-flex justify-space-between">
                                    <div>
                                        <MudText Typo="Typo.h6" Color="Color.Primary"><b>@output.CrowdSale.Name.ToUpper()</b></MudText>
                                        <MudText Typo="Typo.caption">1 @NativeTokenInfo.Symbol - @output.CrowdSale.TokenAmountPerNativeToken.ToAmountDisplay(output.TokenDecimals) @output.CrowdSale.TokenSymbol </MudText>
                                    </div>
                                    <div class="d-flex flex-column">
                                        <MudChip Color="output.StatusColor" Size="Size.Small" Variant="Variant.Filled" Class="align-self-end">
                                            @output.Status
                                        </MudChip>

                                        <div>
                                            @if (!string.IsNullOrEmpty(output.Substatus))
                                            {
                                                <MudText Typo="Typo.caption" Inline="false">@output.Substatus</MudText>
                                            }
                                        </div>
                                    </div>
                                </div>


                                <div class="my-2">
                                    <MudText Typo="Typo.caption" Color="Color.Primary"><b>Soft/Hard Cap</b></MudText>
                                    <MudText Typo="Typo.h6">@output.CrowdSale.SoftCapNativeTokenAmount.ToAmountDisplay(NativeTokenInfo.Decimals) @NativeTokenInfo.Symbol - @output.CrowdSale.HardCapNativeTokenAmount.ToAmountDisplay(NativeTokenInfo.Decimals) @NativeTokenInfo.Symbol</MudText>
                                </div>

                                <div class="my-2">
                                    <MudText Typo="Typo.caption" Color="Color.Primary"><b>Progress</b></MudText>
                                    <MudProgressLinear Color="Color.Primary" Size="Size.Large" Value="@(Convert.ToDouble(output.RaisedAmount.ToAmount(NativeTokenInfo.Decimals) / output.CrowdSale.HardCapNativeTokenAmount.ToAmount(NativeTokenInfo.Decimals) * 100))">
                                        <MudText Typo="Typo.caption">
                                            <b>@(Convert.ToDouble(output.RaisedAmount.ToAmount(NativeTokenInfo.Decimals) / output.CrowdSale.HardCapNativeTokenAmount.ToAmount(NativeTokenInfo.Decimals) * 100)) %</b>
                                        </MudText>
                                    </MudProgressLinear>

                                    <div class="mt-2">
                                        <MudText Typo="Typo.caption">@output.RaisedAmount.ToAmount(NativeTokenInfo.Decimals) @NativeTokenInfo.Symbol Raised</MudText>
                                    </div>
                                </div>

                                <div class="d-flex justify-space-between my-2">
                                    <MudText Typo="Typo.caption" Color="Color.Primary"><b>Lockup Time</b></MudText>
                                    <MudText Typo="Typo.caption">@output.CrowdSale.LockUntilDurationInMinutes minutes</MudText>
                                </div>


                            </div>
                            @* <div class="d-flex justify-space-between">
                    <MudText Typo="Typo.body1" Color="Color.Primary" Class="align-self-center text-limit-1">@course.ShortDescription</MudText>
                    <MudChip Class="align-self-center cursor-pointer" Size="Size.Medium" Color="Color.Secondary">
                    <MudText Class="mr-2" Typo="Typo.body1">
                    @course.PriceInTFuel
                    </MudText>
                    <MudAvatar Style="height:20px; width:20px;" Color="Color.Secondary" Image="@AppIcons.TFuelLogo"></MudAvatar>
                    </MudChip>
                    </div>
                    <MudChip Class="ma-0 my-2 mr-2" Size="Size.Small" Color="Color.Primary"><b>@course.ListingStatus.GetDescription()</b></MudChip>
                    <MudChip Class="ma-0 my-2 mr-2" Size="Size.Small" Variant="Variant.Text" Color="Color.Secondary">@course.Language.ToUpper()</MudChip>

                    @if (course.ListingStatus == CourseListingStatus.Approved)
                    {
                    <MudChip Class="ma-0 my-2 mr-2" Variant="Variant.Text" Size="Size.Small" Color="Color.Secondary">@course.EnrolledCount <MudIcon Icon="@Icons.Material.Filled.Groups" Style="font-size: 1rem" Class="ml-2" /> </MudChip>
                    <MudChip Class="ma-0 my-2 mr-2" Variant="Variant.Text" Size="Size.Small" Color="Color.Secondary"> <MudIcon Icon="@Icons.Material.Filled.StarRate" Style="font-size: 1rem" Class="mr-1" /> @course.AverageRating.ToString("N2") (@course.RatingCount)</MudChip>
                    }*@
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    }
</MudContainer>
