<MudContainer Class="pa-0 ma-0" MaxWidth="MaxWidth.False" style="max-height: 80vh; overflow-y: scroll">
    <EditForm Model="@Model" OnValidSubmit="SubmitAsync">
        <FluentValidationValidator @ref="_fluentValidationValidator" />
        <MudDialog DisableSidePadding="true" ClassActions="px-2 py-4">
            <DialogContent>
                <MudContainer MaxWidth="MaxWidth.False">
                    <MudGrid Class="pt-0 pb-4" Spacing="2">

                        @if (!IsLoaded)
                        {
                            <MudItem xs="12">
                                <MudSkeleton Height="600px" Width="100%" Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" />
                            </MudItem>
                        }
                        else
                        {
                            <MudItem xs="12">
                                <MudText Typo="Typo.body1" Class="text-white"><b>Token Information</b></MudText>
                            </MudItem>
                            <MudItem xs="12">
                                <MudTextField Label="Name" Variant="Variant.Outlined" Disabled="true"
                                          @bind-Value="TokenInfo.TokenName" For="@(() => TokenInfo.TokenName)" />
                            </MudItem>

                            <MudItem xs="12">
                                <MudTextField Label="Symbol" Variant="Variant.Outlined" Disabled="true"
                                          @bind-Value="TokenInfo.Symbol" For="@(() => TokenInfo.Symbol)" />
                            </MudItem>

                            <MudItem xs="12">
                                <MudTextField Label="Decimals" Variant="Variant.Outlined" Disabled="true"
                                          @bind-Value="TokenInfo.Decimals" For="@(() => TokenInfo.Decimals)" />
                            </MudItem>

                            <MudItem xs="12">
                                <MudTextField Label="Balance" Variant="Variant.Outlined" Disabled="true"
                                          Value="TokenBalanceDisplay" For="@(() => TokenBalanceDisplay)" />
                            </MudItem>

                            <MudItem xs="12">
                                <MudText Typo="Typo.body1" Class="text-white"><b>Lock Information</b></MudText>
                            </MudItem>

                            <MudItem xs="12">
                                <MudDatePicker Label="Unlock Date (EOD in GMT)" For="@(() => Model.UnlockDate)" Variant="Variant.Outlined" Disabled="IsProcessing" MinDate="@MinDateValue" @bind-Date="Model.UnlockDate" />
                            </MudItem>
                            <MudItem xs="12">
                                <MudSelect T="bool" Disabled="IsProcessing" Label="Revocable?" Variant="Variant.Outlined" MultiSelection="false" @bind-Value="Model.IsRevocable">
                                    <MudSelectItem Value="true">Yes</MudSelectItem>
                                    <MudSelectItem Value="false">No</MudSelectItem>
                                </MudSelect>
                            </MudItem>

                            <MudItem xs="12">
                                <MudTextField Label="Remarks" Placeholder=" " Variant="Variant.Outlined" Disabled="IsProcessing"
                                          @bind-Value="Model.Remarks" For="@(() => Model.Remarks)" />
                            </MudItem>

                            <MudItem xs="12">
                                <MudText Typo="Typo.body1" Class="text-white"><b>Receivers</b></MudText>
                                <MudButton Class="mt-2" Color="Color.Secondary" Variant="Variant.Filled" OnClick="InvokeAddLockReceiverModalAsync" Disabled="IsProcessing">Add Receiver</MudButton>
                            </MudItem>

                            @if (Model.Receivers.Any())
                            {
                                <MudItem xs="12">
                                    <MudTable Items="Model.Receivers" Context="receiverContext" Elevation="0" Breakpoint="Breakpoint.Sm">
                                        <HeaderContent>
                                            <MudTh>Address</MudTh>
                                            <MudTh>Amount</MudTh>
                                            <MudTh>Action</MudTh>
                                        </HeaderContent>
                                        <RowTemplate>
                                            <MudTd DataLabel="Address">
                                                <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
                                                    @receiverContext.ReceiverAddress.ToMask(6)
                                                </MudHidden>
                                                <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
                                                    @receiverContext.ReceiverAddress.ToMask(10)
                                                </MudHidden>
                                            </MudTd>
                                            <MudTd DataLabel="Amount">@receiverContext.Amount @TokenInfo.Symbol</MudTd>
                                            <MudTd DataLabel="Action">
                                                <MudIconButton Class="align-self-center" Icon="@Icons.Material.Filled.Delete" Color="Color.Secondary" Variant="Variant.Filled" Size="Size.Small" Disabled="IsProcessing" OnClick="(() => RemoveReceiver(receiverContext.Id))" />
                                            </MudTd>
                                        </RowTemplate>
                                        <FooterContent>
                                            <MudTd colspan="3" align="right">
                                                <MudText Typo="Typo.body1" Color="Color.Primary">
                                                    <b>Total Amount to be Locked: @Model.Receivers.Sum(x => x.Amount) @TokenInfo.Symbol </b>
                                                </MudText>
                                            </MudTd>
                                        </FooterContent>
                                    </MudTable>
                                </MudItem>
                            }

                        }

                    </MudGrid>
                </MudContainer>
            </DialogContent>
            <DialogActions>
                @if (IsLoaded)
                {
                    <MudButton DisableElevation Variant="Variant.Text" Disabled="IsProcessing" OnClick="Cancel">CANCEL</MudButton>
                    <MudButton DisableElevation Variant="Variant.Filled" Disabled="IsProcessing" ButtonType="ButtonType.Submit" Color="Color.Secondary">
                        @if (IsProcessing)
                        {
                            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                        }
                        else
                        {
                            <span>ADD LOCK</span>
                        }
                    </MudButton>
                }
            </DialogActions>
        </MudDialog>
    </EditForm>
</MudContainer>

